{"version":3,"sources":["ng://highcharts-angular/lib/highcharts-chart.component.ts","ng://highcharts-angular/lib/highcharts-chart.module.ts"],"names":["HighchartsChartComponent","el","this","EventEmitter","Object","defineProperty","prototype","val","optionsValue","updateOrCreateChart","updateChange","emit","chart","update","oneToOne","Highcharts","constructorType","nativeElement","callbackFunction","series","userOptions","ngOnDestroy","destroy","Component","args","selector","template","ElementRef","Input","Output","HighchartsChartModule","NgModule","declarations","exports"],"mappings":"kRAAA,IAAAA,EAAA,WA2BE,SAAAA,EACYC,GAAAC,KAAAD,GAAAA,oBANa,IAAIE,EAAAA,cAAsB,UAZnDC,OAAAC,eAAaL,EAAAM,UAAA,UAAO,KAApB,SAAqBC,GACnBL,KAAKM,aAAeD,EACpBL,KAAKO,uDAEPL,OAAAC,eAAaL,EAAAM,UAAA,SAAM,KAAnB,SAAoBC,GACdA,IACFL,KAAKO,sBACLP,KAAKQ,aAAaC,MAAK,qCAc3BX,EAAAM,UAAAG,oBAAA,WACMP,KAAKU,OAASV,KAAKU,MAAMC,OAC3BX,KAAKU,MAAMC,OAAOX,KAAKM,cAAc,EAAMN,KAAKY,WAAY,IAE5DZ,KAAKU,MAAQV,KAAKa,WAAWb,KAAKc,iBAAmB,SACnDd,KAAKD,GAAGgB,cACRf,KAAKM,aACLN,KAAKgB,kBAAoB,MAE3BhB,KAAKM,aAAaW,OAASjB,KAAKU,MAAMQ,YAAYD,SAItDnB,EAAAM,UAAAe,YAAA,WACMnB,KAAKU,QACPV,KAAKU,MAAMU,UACXpB,KAAKU,MAAQ,2BA7ClBW,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAU,gDAJQC,EAAAA,kDAOjBC,EAAAA,+BACAA,EAAAA,gCACAA,EAAAA,uBACAA,EAAAA,sBAIAA,EAAAA,wBAMAA,EAAAA,4BAEAC,EAAAA,YAtBH,GCAAC,EAAA,oDAGCC,EAAAA,SAAQP,KAAA,CAAC,CACRQ,aAAc,CAAEhC,GAChBiC,QAAS,CAAEjC,SALb","sourcesContent":["import { Component, ElementRef, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\n\n@Component({\n  selector: 'highcharts-chart',\n  template: ''\n})\nexport class HighchartsChartComponent implements OnDestroy {\n  @Input() Highcharts: any;\n  @Input() constructorType: string;\n  @Input() callbackFunction: any;\n  @Input() set options(val: any) {\n    this.optionsValue = val;\n    this.updateOrCreateChart();\n  }\n  @Input() set update(val: boolean) {\n    if (val) {\n      this.updateOrCreateChart();\n      this.updateChange.emit(false); // clear the flag after update\n    }\n  }\n  @Input() oneToOne: boolean; // #20\n\n  @Output() updateChange = new EventEmitter<boolean>(true);\n\n  protected chart: any;\n  protected optionsValue: any;\n\n  constructor(\n    protected el: ElementRef\n  ) {}\n\n  updateOrCreateChart() {\n    if (this.chart && this.chart.update) {\n      this.chart.update(this.optionsValue, true, this.oneToOne || false);\n    } else {\n      this.chart = this.Highcharts[this.constructorType || 'chart'](\n        this.el.nativeElement,\n        this.optionsValue,\n        this.callbackFunction || null\n      );\n      this.optionsValue.series = this.chart.userOptions.series;\n    }\n  }\n\n  ngOnDestroy() { // #44\n    if (this.chart) {  // #56\n      this.chart.destroy();\n      this.chart = null;\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {HighchartsChartComponent} from './highcharts-chart.component';\n\n@NgModule({\n  declarations: [ HighchartsChartComponent ],\n  exports: [ HighchartsChartComponent ]\n})\nexport class HighchartsChartModule {}\n"]}